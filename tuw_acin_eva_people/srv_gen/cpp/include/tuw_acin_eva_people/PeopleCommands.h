/* Auto-generated by genmsg_cpp for file /home/bajo/workspace/tuw_acin_eva2/tuw_acin_eva_people/srv/PeopleCommands.srv */
#ifndef TUW_ACIN_EVA_PEOPLE_SERVICE_PEOPLECOMMANDS_H
#define TUW_ACIN_EVA_PEOPLE_SERVICE_PEOPLECOMMANDS_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace tuw_acin_eva_people
{
template <class ContainerAllocator>
struct PeopleCommandsRequest_ {
  typedef PeopleCommandsRequest_<ContainerAllocator> Type;

  PeopleCommandsRequest_()
  : command(0)
  , parameters()
  {
  }

  PeopleCommandsRequest_(const ContainerAllocator& _alloc)
  : command(0)
  , parameters(_alloc)
  {
  }

  typedef int8_t _command_type;
  int8_t command;

  typedef std::vector<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > , typename ContainerAllocator::template rebind<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::other >  _parameters_type;
  std::vector<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > , typename ContainerAllocator::template rebind<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::other >  parameters;


  typedef boost::shared_ptr< ::tuw_acin_eva_people::PeopleCommandsRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::tuw_acin_eva_people::PeopleCommandsRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct PeopleCommandsRequest
typedef  ::tuw_acin_eva_people::PeopleCommandsRequest_<std::allocator<void> > PeopleCommandsRequest;

typedef boost::shared_ptr< ::tuw_acin_eva_people::PeopleCommandsRequest> PeopleCommandsRequestPtr;
typedef boost::shared_ptr< ::tuw_acin_eva_people::PeopleCommandsRequest const> PeopleCommandsRequestConstPtr;


template <class ContainerAllocator>
struct PeopleCommandsResponse_ {
  typedef PeopleCommandsResponse_<ContainerAllocator> Type;

  PeopleCommandsResponse_()
  : status()
  {
  }

  PeopleCommandsResponse_(const ContainerAllocator& _alloc)
  : status(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _status_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  status;


  typedef boost::shared_ptr< ::tuw_acin_eva_people::PeopleCommandsResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::tuw_acin_eva_people::PeopleCommandsResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct PeopleCommandsResponse
typedef  ::tuw_acin_eva_people::PeopleCommandsResponse_<std::allocator<void> > PeopleCommandsResponse;

typedef boost::shared_ptr< ::tuw_acin_eva_people::PeopleCommandsResponse> PeopleCommandsResponsePtr;
typedef boost::shared_ptr< ::tuw_acin_eva_people::PeopleCommandsResponse const> PeopleCommandsResponseConstPtr;

struct PeopleCommands
{

typedef PeopleCommandsRequest Request;
typedef PeopleCommandsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct PeopleCommands
} // namespace tuw_acin_eva_people

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::tuw_acin_eva_people::PeopleCommandsRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::tuw_acin_eva_people::PeopleCommandsRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::tuw_acin_eva_people::PeopleCommandsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "99bd9d5d381f3b949e10fbd1fb7ebaff";
  }

  static const char* value(const  ::tuw_acin_eva_people::PeopleCommandsRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x99bd9d5d381f3b94ULL;
  static const uint64_t static_value2 = 0x9e10fbd1fb7ebaffULL;
};

template<class ContainerAllocator>
struct DataType< ::tuw_acin_eva_people::PeopleCommandsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "tuw_acin_eva_people/PeopleCommandsRequest";
  }

  static const char* value(const  ::tuw_acin_eva_people::PeopleCommandsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::tuw_acin_eva_people::PeopleCommandsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int8 command\n\
string[] parameters\n\
\n\
";
  }

  static const char* value(const  ::tuw_acin_eva_people::PeopleCommandsRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::tuw_acin_eva_people::PeopleCommandsResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::tuw_acin_eva_people::PeopleCommandsResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::tuw_acin_eva_people::PeopleCommandsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4fe5af303955c287688e7347e9b00278";
  }

  static const char* value(const  ::tuw_acin_eva_people::PeopleCommandsResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x4fe5af303955c287ULL;
  static const uint64_t static_value2 = 0x688e7347e9b00278ULL;
};

template<class ContainerAllocator>
struct DataType< ::tuw_acin_eva_people::PeopleCommandsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "tuw_acin_eva_people/PeopleCommandsResponse";
  }

  static const char* value(const  ::tuw_acin_eva_people::PeopleCommandsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::tuw_acin_eva_people::PeopleCommandsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string status\n\
\n\
\n\
";
  }

  static const char* value(const  ::tuw_acin_eva_people::PeopleCommandsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::tuw_acin_eva_people::PeopleCommandsRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.command);
    stream.next(m.parameters);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct PeopleCommandsRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::tuw_acin_eva_people::PeopleCommandsResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.status);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct PeopleCommandsResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<tuw_acin_eva_people::PeopleCommands> {
  static const char* value() 
  {
    return "6dc1dadd68b2adb4088cd7c7ed66f3c3";
  }

  static const char* value(const tuw_acin_eva_people::PeopleCommands&) { return value(); } 
};

template<>
struct DataType<tuw_acin_eva_people::PeopleCommands> {
  static const char* value() 
  {
    return "tuw_acin_eva_people/PeopleCommands";
  }

  static const char* value(const tuw_acin_eva_people::PeopleCommands&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<tuw_acin_eva_people::PeopleCommandsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6dc1dadd68b2adb4088cd7c7ed66f3c3";
  }

  static const char* value(const tuw_acin_eva_people::PeopleCommandsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<tuw_acin_eva_people::PeopleCommandsRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "tuw_acin_eva_people/PeopleCommands";
  }

  static const char* value(const tuw_acin_eva_people::PeopleCommandsRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<tuw_acin_eva_people::PeopleCommandsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6dc1dadd68b2adb4088cd7c7ed66f3c3";
  }

  static const char* value(const tuw_acin_eva_people::PeopleCommandsResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<tuw_acin_eva_people::PeopleCommandsResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "tuw_acin_eva_people/PeopleCommands";
  }

  static const char* value(const tuw_acin_eva_people::PeopleCommandsResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // TUW_ACIN_EVA_PEOPLE_SERVICE_PEOPLECOMMANDS_H

